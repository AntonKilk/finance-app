@page "/transaction"

@using Services.Interfaces;
@using Services;
@using MyFinanceLibrary.Models;

<h1>Transactions</h1>

@if (finOperations == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Date</th>
                <th>Comment</th>
                <th>Amount</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var op in finOperations)
            {
                <tr>
                    <td>@op.Date.ToString()</td>
                    <td>@op.Comment</td>
                    <td>@op.Amount.ToString()</td>
                   @* <td>
                <button class="btn btn-primary" @onclick="() => EditFinancialOperation(op)">Edit</button>
                <butn class="btn btn-primary" @onclick="() => DeleteFinancialOperation(op.ID)">Delete</button>
                </td>*@
                </tr>
            }
        </tbody>
    </table>

    <div>
        <h2>Add new transaction</h2>
        <form>
            <label>Date:</label>
            <input class="form-control" type="date" @bind-value="@newFinOperation.Date" />
            <br />
            <label>Comment:</label>
            <input class="form-control" type="text" @bind-value="@newFinOperation.Comment" />
            <br />
            <label>Amount:</label>
            <input class="form-control" type="number" step="0.01" @bind-value="@newFinOperation.Amount" />
            <br />
            <button class="btn btn-primary" @onclick="AddFinancialOperation">Add</button>
        </form>
    </div>
}

@*<div>
    <h2>Edit Financial Operation</h2>
    <form>
        <label>Date:</label>
        <input class="form-control" type="date" @bind-value="@editFinancialOperation.Date" />
        <br />
        <label>Comment:</label>
        <input class="form-control" type="text" @bind-value="@editFinancialOperation.Comment" />
        <br />
        <label>Amount:</label>
        <input class="form-control" type="number" step="0.01" @bind-value="@editFinancialOperation.Amount" />
        <br />
        <button class="btn btn-primary" @onclick="UpdateFinancialOperation">Save</button>
        <button class="btn btn-primary" @onclick="CancelEditFinancialOperation">Cancel</button>
    </form>
</div>*@

@code {
    List<FinancialOperation> finOperations;
    FinancialOperation newFinOperation = new FinancialOperation();
    FinancialOperationService financialService;
    HttpClient client = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        financialService = new FinancialOperationService(new MyHttpService(client));
        finOperations = await financialService.GetOperations();
    }  
    async Task AddFinancialOperation()
    {
        await financialService.AddOperation(newFinOperation);
        finOperations = await financialService.GetOperations();
        newFinOperation = new FinancialOperation();
    }
}
